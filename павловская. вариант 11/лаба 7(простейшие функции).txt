#include "stdafx.h"
#include <iostream>
#include <iomanip> 
using namespace std;

void vv(double **A, int N)
{
cout<<" matrix "<<endl;
	for (int i=0; i<N; i++)
	{
		for (int j=0; j<N; j++)
		{
			cout<<std::setfill (' ')<<std::setw(7)<<A[i][j]<<" ";
		}
		cout<<endl;
	}
}
int countsmall(double **A, int N, int Pr)
{
int count=0;
for (int i=0;i<N; i++)
{
	int sum=0;
	for (int j=0; j<N; j++)
	{
		sum+=A[i][j];
	}
	if (sum/N<Pr)
	{
		count++;
	}
}
return count;
}
int numberlinewhithmax(double **B,int N, int i)
{
	int L;
	double max=B[i][i];
		L=i;
		for (int j=i;j<N;j++)
		{
			if (B[j][i]>max)
			{
				max=B[j][i];
				L=j;
			}
		}
		return L;
}
void change(double **A,int N,int i,int L)
{
	double b;
for (int j=i; j<N; j++)
		{
			b=A[i][j];
			A[i][j]=A[L][j];
			A[L][j]=b;
		}
}
void devi(double **A, int N, int i)
{
	double B=A[i][i];
for (int j=i; j<N; j++)
		{
			A[i][j]=A[i][j]/B;
		}
}
void make0(double **A, int N, int i)
{
	double b;
for (int j=i+1;j<N;j++)
		{
			b=A[j][i];
			for (int k=i; k<N; k++)
			{
				A[j][k]-=A[i][k]*b;
			}
			//vv(A,N);
		}
}
int main()
{
	setlocale (0, "");
	double **A;
	int N;
	cout<<" enter the dimension of the matrix "<< endl;
	cin>>N;
	A = new double*[N];
	for (int i=0; i<N; i++)
	{
		A[i]=new double[N];

	}
	cout<<" enter the matrix "<<endl;
	for (int i=0; i<N; i++)
	{
		for (int j=0; j<N; j++)
		{
			cin>>A[i][j];
		}
	}
	cout<<" enter the specified value "<<endl;
	int Pr;
	cin>>Pr;
	cout<<" the number of rows whose average elements <"<<Pr<<" ="<<countsmall(A,N,Pr)<<endl;
	int L;
	double b;
	for (int i=0;i<N; i++)
	{
		L=numberlinewhithmax(A, N, i);
	    change(A, N, i, L);
		devi(A, N, i);
		make0(A,N,i);
		vv(A,N);
		
	}
	
	vv(A,N);


	system("pause");
	return 0;
}

